stages:
  - build
  - deploy

variables:
  REGISTRY_URL: registry:5000

build_image:
  stage: build
  image: docker:latest
  script:
    - export $(cat .env | xargs)
    - docker build -t ${REGISTRY_URL}/microblog:latest .
    - docker build -f Dockerfile-nginx -t ${REGISTRY_URL}/nginx:latest .
    - docker build -f Dockerfile-prometheus -t ${REGISTRY_URL}/prometheus:latest .
    - docker push ${REGISTRY_URL}/microblog:latest
    - docker push ${REGISTRY_URL}/nginx:latest
    - docker push ${REGISTRY_URL}/prometheus:latest
  tags:
    - docker
  only:
    - main

deploy_to_swarm:
  stage: deploy
  image: docker:20.10.16
  script:
    - export $(cat .env | xargs)
    - docker service ps microblog-stack_web || echo "Service not yet deployed"
    - until docker run --rm --network microblog-net postgres:14 pg_isready -h postgres -U postgres; do echo "Waiting for postgres"; sleep 2; done
    - docker exec $(docker ps -q -f name=microblog-stack_web) flask db init || true
    - docker exec $(docker ps -q -f name=microblog-stack_web) flask db migrate
    - docker exec $(docker ps -q -f name=microblog-stack_web) flask db upgrade
    - docker stack deploy -c docker-compose.yml microblog-stack
  tags:
    - docker
  only:
    - main
