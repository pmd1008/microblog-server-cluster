version: '3.8'

services:
  microblog:
    image: 10.3.1.10:5050/microblog:latest
    environment:
      - DATABASE_URL=postgresql://postgres:kaskelen@10.3.1.10:5432/socnet
      - FLASK_ENV=production
      - LOG_TO_STDOUT=true
    ports:
      - "5000:5000"
      - "9100:9100"
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role != manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - microblog-net

  prometheus:
    image: 10.3.1.10:5050/prometheus:latest
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - microblog-net
    volumes:
      - prometheus-data:/prometheus  # Том для Prometheus

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - microblog-net
    volumes:
      - grafana-data:/var/lib/grafana  # Том для Grafana

  nginx:
    image: 10.3.1.10:5050/nginx:latest
    ports:
      - "443:443"
      - "9090:9090"
      - "3000:3000"
    depends_on:
      - microblog
      - prometheus
      - grafana
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - microblog-net

networks:
  microblog-net:
    driver: overlay

volumes:
  grafana-data:  # Определение тома для Grafana
  prometheus-data:  # Определение тома для Prometheus
