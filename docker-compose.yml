version: '3.8'

services:
  microblog:
    image: ${REGISTRY_URL}/microblog:latest
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FLASK_ENV=${FLASK_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_TO_STDOUT=${LOG_TO_STDOUT}
    ports:
      - "5000:5000"
      - "9100:9100"
    deploy:
      mode: global
      placement:
        constraints:
          - node.role != manager
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - microblog-net

  prometheus:
    image: ${REGISTRY_URL}/prometheus:latest
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - microblog-net
    volumes:
      - prometheus-data:/prometheus

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - microblog-net
    volumes:
      - grafana-data:/var/lib/grafana

  nginx:
    image: ${REGISTRY_URL}/nginx:latest
    ports:
      - "443:443"
      - "9090:9090"
      - "3000:3000"
    depends_on:
      - microblog
      - prometheus
      - grafana
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - microblog-net

networks:
  microblog-net:
    driver: overlay

volumes:
  grafana-data:
  prometheus-data:
